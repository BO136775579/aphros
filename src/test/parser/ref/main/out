
Simple
set string a 1
set int b 1
set double c 1
set vect d 1 

TestFile
set string c a b   s c
set string dumplist p vx vy vf
set string from_c.conf 
set string from_d.conf 
set string multi "inline 

line1
line2
line3
"
set string multi2 "line 1 line2 
line3

line4
"
set string s 
set string sub [sub]
set string sub_2 a[sub]b
set string sub_3 aa[sub]b
set string sub_4 a[sub]_2b
set string suball [9] [9.1] [1 2 3 ] 9
set string suball2 9
set int b 123
set int subint 9
set double a 2.9
set double d1 9
set double d2 9
set double e 3.1
set double subdouble 9.1
set vect f 1 2 34 5 
set vect subvect 1 2 3 

TestConfig
1.2
3
(1,2,3)
(4,5,6)
name
1

TestArgumentParser

usage: program [--help|-h] [--int|-i INT] [--double DOUBLE] [--string STRING] [--vect VECT] [--int0|-i0 INT0] [--double0 DOUBLE0] [--string0 STRING0] [--vect0|-v0 VECT0] NX NY NZ

Description

positional arguments:
NX                  size in x-direction
NY                  size in y-direction
NZ                  size in z-direction. Default is 1

optional arguments:
--help, -h          Print help and exit
--int, -i           Default is 3
--double            Default is 3
--string            Default is a
--vect              Default is 0 
--int0, -i0         
--double0           
--string0           
--vect0, -v0        List of doubles


Known args:
string string a
string string0 
int help 0
int int 3
int int0 0
int nx 0
int ny 0
int nz 1
double double 3
double double0 0
vect vect 0 
vect vect0 

Parsed args:
string string a
int EXIT 0
int FAIL 0
int help 1
int int 7
int nx 16
int ny 8
int nz 1
double double 2.4
double double0 5.4
vect vect 0 

TestFormat
Char 's' at position 5 in string 'qwerasdf'
Vect (0,1,2)
