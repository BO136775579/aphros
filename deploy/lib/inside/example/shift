#!/bin/sh

awk '
BEGIN {
    eps = 1e-3
    me = "shift"
    n = read(ARGV[1], x, y)
    m = read(ARGV[2], u, v)
    if (n != m) {
        printf "%s: wrong number of vertices (n=%d, m=%d)\n", me, n, m | "cat >&2"
        exit(2)
    }
    shift_max(x, y)
    shift_max(u, v)
    for (i in x) {
        dx[i] = x[i] - u[i]
        dy[i] = y[i] - v[i]
    }
    for (i = 1; i <= n; i++) {
	for (j = 1; j < i; j++) {
	    d = (dx[i] - dx[j])^2 + (dy[i] - dy[j])^2
	    if (d < eps*eps)
		break
	}
	if (j == i) {
	    set[i] = ++cnt
	    #print dx[i], dy[i]
	} else
	    set[i] = set[j]
    }
    for (i = 1; i <= n; i++)
	print i, set[i]
}

function read(f, x, y,   i) {
    while (getline < f) {
        i++
        x[i] = $1
        y[i] = $3
    }
    close(f)
    return i
}

function shift_max(x, y,   i, j, xj, yj) {
    j = max_arg(x)
    xj = x[j]
    yj = y[j]
    for (i in x) {
        x[i] -= xj
        y[i] -= yj
    }
}

function max_arg(x,   i, m, im) {
    for (i in x) {
        m = x[i]
        break
    }
    for (i in x)
        if (x[i] >= m) {
	    m = x[i]
            im = i
	}
    return im
}

' "$@"
