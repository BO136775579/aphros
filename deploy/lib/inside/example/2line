#!/usr/bin/env python3

import sys

def off(p, line):
    print("OFF")
    print(len(p), len(line), 0)
    for e in p:
        print(e)
    for l in line:
        print(len(l) + 1, end = ' ')
        for e in l:
            print(e, end = ' ')
        print(l[0])

def gnuplot(p, line):
    for l in line:
        for e in l:
            print(p[e])
        print(p[l[0]])
        print("\n")

def many(p, line):
    xx = [ ]
    yy = [ ]
    for e in p:
        e = e.split()
        xx.append(float(e[0]))
        yy.append(float(e[2]))
    for i, l in enumerate(line):
        x = [xx[e] for e in l]
        y = [yy[e] for e in l]
        m = x.index(max(x))
        sys.stderr.write("%-.16e %-.16e\n" % (x[m], y[m]))
        with open("%02d.line" % i, 'w') as f:
            for u, v in zip(x, y):
                f.write("%-.16e %-.16e\n" % (u - x[m], v - y[m]))

def one(p, line):
    l = line[1]
    for e in l:
        print(p[e])
    print(p[l[0]])

#output = off
#output = gnuplot
#output = one
output = many

p = [ ]
adj = { }
for l in sys.stdin:
    l = l.split()
    c, l = l[0], l[1:]
    if c == 'p':
        p.append(" ".join(l))
    elif c == 'f':
        l = [int(e) for e in l]
        l = set(l)
        for i in l:
            for j in l:
                if i != j:
                    if not i in adj:
                        adj[i] = set()
                    adj[i].add(j)
nv = len(p)
seen = set()
line = [ ]
for i in range(nv):
    if not i in seen:
        l = [ ]
        j = i
        while True:
            seen.add(j)
            l.append(j)
            for k in adj[j]:
                if not k in seen:
                    break
            else:
                break
            j = k
        line.append(l)
output(p, line)
